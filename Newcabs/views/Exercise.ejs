<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>GrammarMaster</title>
    <script
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCCAGPNVBLaEZQPnrUDHwhDnFvdPIxCqKs&loading=async"></script>
    <script
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCCAGPNVBLaEZQPnrUDHwhDnFvdPIxCqKs&libraries=places"></script>
        
        <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
        }
        .quiz-container {
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            width: 50%;
            margin: auto;
        }
        .question {
            font-size: 1.2em;
        }
        .options {
            margin-top: 10px;
        }
        .option {
            margin-bottom: 10px;
        }
        button {
            background-color: #28a745;
            color: white;
            border: none;
            padding: 10px;
            border-radius: 5px;
            cursor: pointer;
        }
        button:hover {
            background-color: #218838;
        }</style>
</head>
<link rel="stylesheet" href="css/Profile.css">
<link rel="stylesheet"
    href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
<link rel="stylesheet"
    href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
<link rel="stylesheet"
    href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
<link rel="stylesheet"
    href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
<link rel="stylesheet"
    href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
<link rel="stylesheet"
    href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
<link rel="stylesheet"
    href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
<link rel="stylesheet"
    href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />    

<body>
    
    <nav>
        <ul>
            <a href="#" class="brands" id="menus" onclick="openNav()"><span
                    class="material-symbols-outlined">menu</span></a>
                    <a href="#" id="hola" onclick="goToHomepage()"><li class="brand"><img
                    src="https://i.pinimg.com/736x/64/be/90/64be90192556966769ac42102a38fc6c.jpg"
                    alt="LogisticsPro" width=10>GrammarMaster</li></a>
            <li class="brand1"><a href="#" onclick="goToHomepage()">Home</a></li>
            <li class="brand1"><a href="#" onclick="goToAboutpage()">About</a></li>
            
            <li class="brand1">
                <div class="dropdown">
                <a href="#" class="services">Services</a>
                <a href="#" class="drop">
                    <span class="material-symbols-outlined answers">arrow_drop_down</span>
                </a>
                <div class="dropdown-content">
                    <a href="#" class="dropdown-content1" onclick="goToLoginpage()"><p>Exercises</p></a>
                    <a href="#" class="dropdown-content1" onclick="goToLeaderpage()"><p>Leaderboard</p></a>
                </div>
            </div>
            </li>
                     
            <li class="brand1"><a href="#" id="spaces" onclick="goToContactpage()">Contact Us</a></li>
            <div class="book"><a href="#" class="Booked" onclick="goToLoginpage()">User Login</a></div>
        </ul>
    </nav>
    <div id="mySidenav" class="sidenav">
        <ul>
            <a href="javascript:void(0)" class="closebtn" onclick="closeNav()">&times;</a>
            <li><a href="#" onclick="goToHomepage()"><span class="material-symbols-outlined">home</span>Home</a></li>
            <li><a href="#" onclick="goToLoginpage()"><span class="material-symbols-outlined">login</span>User Login</a></li>
            <li><a href="#" onclick="goToDriverLoginpage()"><span class="material-symbols-outlined">login</span>Admin Login</a></li>
            <li><a href="#" onclick="goToLoginpage()"><span class="material-symbols-outlined">school</span>Exercises</a></li>
            <li><a href="#" onclick="goToLeaderpage()"><span class="material-symbols-outlined">leaderboard</span>Leaderboard</a></li>
            <li><a href="#" onclick="goToAboutpage()"><span class="material-symbols-outlined">info</span> About Us</a></li>
            <li><a href="#" onclick="goToContactpage()"><span class="material-symbols-outlined">contact_support</span> Contact Us</a></li>
        </ul>
    </div>
    <div class="importance">
    </div>    
    <div>
    <div class="quiz-container">
        <div id="quiz-content">
            Loading questions...
        </div>
    </div>

    <script src="/js/script.js"></script>
    <script src="/js/user.js"></script>
    <div class="hoolla">
    <footer class="footi">
        <p>&copy; 2024 GrammarMaster. All rights reserved.</p>
    </footer>
</div>
<script>
let questions = [];
let currentQuestionIndex = 0;

function stripQuotes(str) {
    return str.replace(/^"+|"+$/g, '');
}
async function fetchQuestions() {
        try {
            const response = await fetch('http://localhost:8000/api/questions');
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            const data = await response.json();
    
            // Transform data to match the expected format
            questions = data.map(q => ({
                question: q.question,
                options: [q.option1, q.option2, q.option3, q.option4],
                answer: q.answer
            }));
            displayQuestion();
        } catch (error) {
            console.error('Error fetching questions:', error);
        }
    }
    
    function displayQuestion() {
        const question = questions[currentQuestionIndex];
        const quizContent = `
            <div class="question">${currentQuestionIndex + 1}. ${question.question}</div>
            <div class="options">
                ${question.options.map(option => `
                    <div class="option">
                        <input type="radio" name="question${currentQuestionIndex}" value="${option}">
                        ${option}
                    </div>
                `).join('')}
            </div>
            <button onclick="nextQuestion()">Next</button>
        `;
        document.getElementById('quiz-content').innerHTML = quizContent;
    }
    
    let score = 0;
    
    function nextQuestion() {
    const selectedOption = document.querySelector(`input[name="question${currentQuestionIndex}"]:checked`);
    if (!selectedOption) {
        alert('Please select an option before proceeding.');
        return;
    }

    // Strip extra quotes and normalize the answer and selected value
    const answer = stripQuotes(questions[currentQuestionIndex].answer).trim().toLowerCase();
    const selectedValue = stripQuotes(selectedOption.value).trim().toLowerCase();

    console.log(`Selected Value: "${selectedValue}"`);
    console.log(`Correct Answer: "${answer}"`);

    const options = document.querySelectorAll(`input[name="question${currentQuestionIndex}"]`);
    const optionLabels = document.querySelectorAll(`.option`);

    options.forEach((option, index) => {
        option.disabled = true; // Disable option selection after choosing one

        // Normalize option values for comparison
        const optionValue = stripQuotes(option.value).trim().toLowerCase();

        // Highlight the correct answer in green
        if (optionValue === answer) {
            optionLabels[index].style.color = 'green';
            score++;
            updateScoreInBackend(score);
        }

        // Highlight the selected wrong answer in red
        if (option === selectedOption && optionValue !== answer) {
            optionLabels[index].style.color = 'red';
        }
    });

    setTimeout(() => {
        currentQuestionIndex++;
        if (currentQuestionIndex < questions.length) {
            displayQuestion();
        } else {
            alert('Quiz completed!');
            currentQuestionIndex = 0; // Resetting for demonstration
            displayQuestion(); // To restart the quiz
        }
    }, 1500); // Delay before moving to the next question
}

async function updateScoreInBackend(score) {
    const userId = 'pratham'; 
    try {
        const response = await fetch('http://localhost:8000/api/update-score', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ score, userId })
        });
        const data = await response.json();
        console.log('Score updated:', data);
    } catch (error) {
        console.error('Error updating score:', error);
    }
}


    fetchQuestions();
    
</script>
</body>
</html>